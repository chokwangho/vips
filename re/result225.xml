<VIPSPage PageRectHeight="600" PageRectLeft="0" PageRectTop="0" PageRectWidth="1200" PageTitle="Avoid webpack bloat: Optimize your dependencies - Zillow Engineering" Url="https://www.zillow.com/engineering/webpack-optimize-dependencies/" WindowHeight="600" WindowWidth="1200" neworder="0" order="0">
<LayoutNode BgColor="#ffffff" ContainImg="12" ContainP="1" ContainTable="false" DOMCldNum="0" DoC="1" FontSize="16" FontWeight="normal" FrameSourceIndex="0" ID="1" IsImg="false" LinkTextLen="188" ObjectRectHeight="4373" ObjectRectLeft="0" ObjectRectTop="0" ObjectRectWidth="1200" SourceIndex="0" TextLen="5289" order="1">
<LayoutNode BgColor="#ffffff" ContainImg="0" ContainP="0" ContainTable="false" Content="☰ Zillow Engineering Infrastructure Mobile Performance and Testing Web Culture &amp; Events Jobs " DOMCldNum="0" DoC="10" FontSize="16" FontWeight="normal" FrameSourceIndex="0" ID="1-1" IsImg="false" LinkTextLen="84" ObjectRectHeight="242" ObjectRectLeft="0" ObjectRectTop="0" ObjectRectWidth="1200" SRC="&lt;button aria-expanded=&quot;false&quot; class=&quot;navbar-toggle collapsed&quot; data-target=&quot;#header-navbar&quot; data-toggle=&quot;collapse&quot; type=&quot;button&quot;&gt;&#13;☰&#13;&lt;/button&gt;&lt;a class=&quot;navbar-title&quot; href=&quot;https://www.zillow.com/engineering/&quot;&gt;&#13;Zillow Engineering &lt;/a&gt;&lt;a href=&quot;https://www.zillow.com/engineering/category/infrastructure/&quot;&gt;Infrastructure&lt;/a&gt;&lt;a href=&quot;https://www.zillow.com/engineering/category/mobile/&quot;&gt;Mobile&lt;/a&gt;&lt;a href=&quot;https://www.zillow.com/engineering/category/performance/&quot;&gt;Performance and Testing&lt;/a&gt;&lt;a href=&quot;https://www.zillow.com/engineering/category/web/&quot;&gt;Web&lt;/a&gt;&lt;a href=&quot;https://www.zillow.com/engineering/category/culture-events/&quot;&gt;Culture &amp;amp; Events&lt;/a&gt;&lt;a href=&quot;https://www.zillow.com/careers/&quot;&gt;Jobs&lt;/a&gt;" SourceIndex="0" TextLen="85" order="2"/>
<LayoutNode BgColor="#ffffff" ContainImg="0" ContainP="0" ContainTable="false" Content="Avoid webpack bloat: Optimize your dependencies " DOMCldNum="17" DoC="10" FontSize="32" FontWeight="normal" FrameSourceIndex="0" ID="1-2" IsImg="false" LinkTextLen="0" ObjectRectHeight="50" ObjectRectLeft="0" ObjectRectTop="263" ObjectRectWidth="1200" SRC="&lt;h1 class=&quot;post-title&quot;&gt;&#13;Avoid webpack bloat: Optimize your dependencies &lt;/h1&gt;" SourceIndex="192" TextLen="47" order="3"/>
<LayoutNode BgColor="#ffffff" ContainImg="0" ContainP="0" ContainTable="false" Content=" Posted by  Brian Stone on February 22, 2017 in  Infrastructure ,  Web " DOMCldNum="0" DoC="10" FontSize="16" FontWeight="normal" FrameSourceIndex="0" ID="1-3" IsImg="false" LinkTextLen="28" ObjectRectHeight="82" ObjectRectLeft="0" ObjectRectTop="334" ObjectRectWidth="1200" SRC=" Posted by &lt;a href=&quot;https://www.zillow.com/engineering/author/brians/&quot; rel=&quot;author&quot; title=&quot;Posts by Brian Stone&quot;&gt;Brian Stone&lt;/a&gt;on February 22, 2017in &lt;a href=&quot;https://www.zillow.com/engineering/category/infrastructure/&quot; rel=&quot;category tag&quot;&gt;Infrastructure&lt;/a&gt;, &lt;a href=&quot;https://www.zillow.com/engineering/category/web/&quot; rel=&quot;category tag&quot;&gt;Web&lt;/a&gt;" SourceIndex="0;199;0;0;206;0;209" TextLen="64" order="4"/>
<LayoutNode BgColor="#ffffff" ContainImg="2" ContainP="0" ContainTable="false" Content=" " DOMCldNum="0" DoC="8" FontSize="16" FontWeight="normal" FrameSourceIndex="0" ID="1-4" IsImg="true" LinkTextLen="0" ObjectRectHeight="432" ObjectRectLeft="0" ObjectRectTop="433" ObjectRectWidth="1200" SRC="&lt;img alt=&quot;&quot; class=&quot;post-thumbnail wp-post-image&quot; height=&quot;432&quot; src=&quot;https://wp.zillowstatic.com/23/bloat-min1-55b8cc-900x432.jpg&quot; width=&quot;900&quot;/&gt;" SourceIndex="726" TextLen="0" order="5"/>
<LayoutNode BgColor="#ffffff" ContainImg="0" ContainP="0" ContainTable="false" Content="Package managers like NPM are a great way to find and share code; however, you have to be careful whenever you take a dependency. Each dependency you take comes with a cost; it is another potential source of bugs and breakage, and it requires more effort to update than your own source. If it’s not clear how dependencies can be dangerous, let me remind you  how a 17 line javascript module basically took down the internet . " DOMCldNum="3" DoC="10" FontSize="16" FontWeight="normal" FrameSourceIndex="0" ID="1-5" IsImg="false" LinkTextLen="0" ObjectRectHeight="78" ObjectRectLeft="0" ObjectRectTop="882" ObjectRectWidth="1200" SRC="&lt;span style=&quot;font-weight: 400;&quot;&gt;Package managers like NPM are a great way to find and share code; however, you have to be careful whenever you take a dependency. Each dependency you take comes with a cost; it is another potential source of bugs and breakage, and it requires more effort to update than your own source. If it’s not clear how dependencies can be dangerous, let me remind you &lt;/span&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;Package managers like NPM are a great way to find and share code; however, you have to be careful whenever you take a dependency. Each dependency you take comes with a cost; it is another potential source of bugs and breakage, and it requires more effort to update than your own source. If it’s not clear how dependencies can be dangerous, let me remind you &lt;/span&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;how a 17 line javascript module basically took down the internet&lt;/span&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;how a 17 line javascript module basically took down the internet&lt;/span&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;.&lt;/span&gt;" SourceIndex="218;218;221;221;223" TextLen="421" order="6"/>
<LayoutNode BgColor="#ffffff" ContainImg="0" ContainP="0" ContainTable="false" Content="left-pad is an extreme example, but even well-maintained dependencies are victim to feature bloat. Consider the popular date handling library  Moment.js ;  when it was published at version 1.0.0, the library was only 2.2kb in size — currently, the library sits over 20kb gzipped (even larger if you bring in locales or timezones).  Granted a lot of features have been added since the 1.0.0 release, but maybe you only need a small subset. You might want to re-evaluate your need for this dependency, or consider using a more modular library like  date-fns  to only bring in the features you require. " DOMCldNum="6" DoC="10" FontSize="16" FontWeight="normal" FrameSourceIndex="0" ID="1-6" IsImg="false" LinkTextLen="9" ObjectRectHeight="78" ObjectRectLeft="0" ObjectRectTop="977" ObjectRectWidth="1200" SRC="&lt;span style=&quot;font-weight: 400;&quot;&gt;left-pad is an extreme example, but even well-maintained dependencies are victim to feature bloat. Consider the popular date handling library &lt;/span&gt;&lt;a href=&quot;https://momentjs.com/&quot;&gt;Moment.js&lt;/a&gt;;&lt;span style=&quot;font-weight: 400;&quot;&gt; when it was published at version 1.0.0, the library was only 2.2kb in size — currently, the library sits over 20kb gzipped (even larger if you bring in locales or timezones).&lt;/span&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt; when it was published at version 1.0.0, the library was only 2.2kb in size — currently, the library sits over 20kb gzipped (even larger if you bring in locales or timezones).&lt;/span&gt; Granted a lot of features have been added since the 1.0.0 release, butmaybe you only need a small subset. You might want to re-evaluate your need for this dependency, or consider using a more modular library like &lt;span style=&quot;font-weight: 400;&quot;&gt;date-fns&lt;/span&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt; to only bring in the features you require.&lt;/span&gt;" SourceIndex="227;230;0;233;233;0;0;237;239" TextLen="591" order="7"/>
<LayoutNode BgColor="#ffffff" ContainImg="0" ContainP="0" ContainTable="false" Content="Track your application size " DOMCldNum="1" DoC="10" FontSize="24" FontWeight="normal" FrameSourceIndex="0" ID="1-7" IsImg="false" LinkTextLen="0" ObjectRectHeight="38" ObjectRectLeft="0" ObjectRectTop="1073" ObjectRectWidth="1200" SRC="&lt;b&gt;Track your application size&lt;/b&gt;" SourceIndex="243" TextLen="27" order="8"/>
<LayoutNode BgColor="#ffffff" ContainImg="0" ContainP="0" ContainTable="false" Content="A good way to catch dependency bloat is to track the size of your application. At Zillow, every time we push code, a build is triggered that calculates our webpack bundle size. The sizes are tracked in Splunk where we can visualize the trend and investigate any curious changes. Additionally, we set an upper limit on the size of every application that breaks the build if it crosses our set threshold. Last December, the following happened: " DOMCldNum="1" DoC="10" FontSize="16" FontWeight="normal" FrameSourceIndex="0" ID="1-8" IsImg="false" LinkTextLen="0" ObjectRectHeight="78" ObjectRectLeft="0" ObjectRectTop="1129" ObjectRectWidth="1200" SRC="&lt;span style=&quot;font-weight: 400;&quot;&gt;A good way to catch dependency bloat is to track the size of your application. At Zillow, every time we push code, a build is triggered that calculates our webpack bundle size. The sizes are tracked in Splunk where we can visualize the trend and investigate any curious changes. Additionally, we set an upper limit on the size of every application that breaks the build if it crosses our set threshold. Last December, the following happened:&lt;/span&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;A good way to catch dependency bloat is to track the size of your application. At Zillow, every time we push code, a build is triggered that calculates our webpack bundle size. The sizes are tracked in Splunk where we can visualize the trend and investigate any curious changes. Additionally, we set an upper limit on the size of every application that breaks the build if it crosses our set threshold. Last December, the following happened:&lt;/span&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;A good way to catch dependency bloat is to track the size of your application. At Zillow, every time we push code, a build is triggered that calculates our webpack bundle size. The sizes are tracked in Splunk where we can visualize the trend and investigate any curious changes. Additionally, we set an upper limit on the size of every application that breaks the build if it crosses our set threshold. Last December, the following happened:&lt;/span&gt;" SourceIndex="247;247;247" TextLen="439" order="9"/>
<LayoutNode BgColor="#ffffff" ContainImg="2" ContainP="0" ContainTable="false" Content=" " DOMCldNum="1" DoC="8" FontSize="16" FontWeight="normal" FrameSourceIndex="0" ID="1-9" IsImg="true" LinkTextLen="0" ObjectRectHeight="391" ObjectRectLeft="0" ObjectRectTop="1224" ObjectRectWidth="1200" SRC="&lt;img alt=&quot;Webpack application size over time&quot; class=&quot;alignnone wp-image-2021 size-full&quot; height=&quot;391&quot; src=&quot;https://wp.zillowstatic.com/23/BLOG-c508a5.png&quot; width=&quot;987&quot;/&gt;" SourceIndex="764" TextLen="0" order="10"/>
<LayoutNode BgColor="#ffffff" ContainImg="0" ContainP="0" ContainTable="false" Content="We saw a huge jump in our application sizes indicating a common dependency had ballooned. After investigating, we found that a newly factored out module included a mismatch in the versions of React. Consequently, both major versions of React were bundled with our applications resulting in a major jump in size. After we updated the new module to the latest version of React, the issue was resolved. " DOMCldNum="1" DoC="10" FontSize="16" FontWeight="normal" FrameSourceIndex="0" ID="1-10" IsImg="false" LinkTextLen="0" ObjectRectHeight="78" ObjectRectLeft="0" ObjectRectTop="1632" ObjectRectWidth="1200" SRC="&lt;span style=&quot;font-weight: 400;&quot;&gt;We saw a huge jump in our application sizes indicating a common dependency had ballooned. After investigating, we found that a newly factored out module included a mismatch in the versions of React. Consequently, both major versions of React were bundled with our applications resulting in a major jump in size. After we updated the new module to the latest version of React, the issue was resolved.&lt;/span&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;We saw a huge jump in our application sizes indicating a common dependency had ballooned. After investigating, we found that a newly factored out module included a mismatch in the versions of React. Consequently, both major versions of React were bundled with our applications resulting in a major jump in size. After we updated the new module to the latest version of React, the issue was resolved.&lt;/span&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;We saw a huge jump in our application sizes indicating a common dependency had ballooned. After investigating, we found that a newly factored out module included a mismatch in the versions of React. Consequently, both major versions of React were bundled with our applications resulting in a major jump in size. After we updated the new module to the latest version of React, the issue was resolved.&lt;/span&gt;" SourceIndex="254;254;254" TextLen="397" order="11"/>
<LayoutNode BgColor="#ffffff" ContainImg="0" ContainP="0" ContainTable="false" Content="Prevent duplicate dependency versions " DOMCldNum="1" DoC="10" FontSize="24" FontWeight="normal" FrameSourceIndex="0" ID="1-11" IsImg="false" LinkTextLen="0" ObjectRectHeight="38" ObjectRectLeft="0" ObjectRectTop="1728" ObjectRectWidth="1200" SRC="&lt;b&gt;Prevent duplicate dependency versions&lt;/b&gt;" SourceIndex="258" TextLen="37" order="12"/>
<LayoutNode BgColor="#ffffff" ContainImg="0" ContainP="0" ContainTable="false" Content="The December build break made me wonder if there were any other modules with duplicate versions in our bundles. When you have a lot of dependencies (which in turn have their own dependencies), it becomes increasingly likely that two modules share a dependency. In most cases, the dependencies versions are compatible and won't increase the size of your bundle; however, if the versions are conflicting (like in the React example above), your bundle will include both. I wanted an automated way to help find and prevent the latter from happening. " DOMCldNum="1" DoC="10" FontSize="16" FontWeight="normal" FrameSourceIndex="0" ID="1-12" IsImg="false" LinkTextLen="0" ObjectRectHeight="78" ObjectRectLeft="0" ObjectRectTop="1784" ObjectRectWidth="1200" SRC="&lt;span style=&quot;font-weight: 400;&quot;&gt;The December build break made me wonder if there were any other modules with duplicate versions in our bundles. When you have a lot of dependencies (which in turn have their own dependencies), it becomes increasingly likely that two modules share a dependency. In most cases, the dependencies versions are compatible and won't increase the size of your bundle; however, if the versions are conflicting (like in the React example above), your bundle will include both. I wanted an automated way to help find and prevent the latter from happening.&lt;/span&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;The December build break made me wonder if there were any other modules with duplicate versions in our bundles. When you have a lot of dependencies (which in turn have their own dependencies), it becomes increasingly likely that two modules share a dependency. In most cases, the dependencies versions are compatible and won't increase the size of your bundle; however, if the versions are conflicting (like in the React example above), your bundle will include both. I wanted an automated way to help find and prevent the latter from happening.&lt;/span&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;The December build break made me wonder if there were any other modules with duplicate versions in our bundles. When you have a lot of dependencies (which in turn have their own dependencies), it becomes increasingly likely that two modules share a dependency. In most cases, the dependencies versions are compatible and won't increase the size of your bundle; however, if the versions are conflicting (like in the React example above), your bundle will include both. I wanted an automated way to help find and prevent the latter from happening.&lt;/span&gt;" SourceIndex="262;262;262" TextLen="543" order="13"/>
<LayoutNode BgColor="#ffffff" ContainImg="0" ContainP="0" ContainTable="false" Content="Introducing  webpack-stats-duplicates , a command line tool that will analyze that output of your  webpack --json &gt; stats.json  and find dependencies with multiple versions: " DOMCldNum="3" DoC="10" FontSize="16" FontWeight="normal" FrameSourceIndex="0" ID="1-13" IsImg="false" LinkTextLen="0" ObjectRectHeight="28" ObjectRectLeft="0" ObjectRectTop="1879" ObjectRectWidth="1200" SRC="&lt;span style=&quot;font-weight: 400;&quot;&gt;Introducing &lt;/span&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;webpack-stats-duplicates&lt;/span&gt;, a command line tool that will analyze that output of your &lt;code&gt;webpack --json &amp;gt; stats.json&lt;/code&gt; and find dependencies with multiple versions:" SourceIndex="266;269;0;273;0" TextLen="169" order="14"/>
<LayoutNode BgColor="#ffffff" ContainImg="2" ContainP="0" ContainTable="false" Content=" " DOMCldNum="1" DoC="8" FontSize="16" FontWeight="normal" FrameSourceIndex="0" ID="1-14" IsImg="true" LinkTextLen="0" ObjectRectHeight="78" ObjectRectLeft="0" ObjectRectTop="1924" ObjectRectWidth="1200" SRC="&lt;img alt=&quot;Example of webpack-stats-duplicates output from webpack stats.json&quot; class=&quot;alignnone wp-image-2023 size-full&quot; height=&quot;78&quot; src=&quot;https://wp.zillowstatic.com/23/example-c8bd6e.png&quot; width=&quot;622&quot;/&gt;" SourceIndex="791" TextLen="0" order="15"/>
<LayoutNode BgColor="#ffffff" ContainImg="0" ContainP="0" ContainTable="false" Content="With the addition of a  gulp plugin , we now have the ability to fail any builds that have duplicate dependency versions. When a new duplicate is found, that dependency can either be fixed, or whitelisted if it falls outside your realm of control. " DOMCldNum="3" DoC="10" FontSize="16" FontWeight="normal" FrameSourceIndex="0" ID="1-15" IsImg="false" LinkTextLen="0" ObjectRectHeight="52" ObjectRectLeft="0" ObjectRectTop="2019" ObjectRectWidth="1200" SRC="&lt;span style=&quot;font-weight: 400;&quot;&gt;With the addition of a &lt;/span&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;gulp plugin&lt;/span&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;, we now have the ability to fail any builds that have duplicate dependency versions. When a new duplicate is found, that dependency can either be fixed, or whitelisted if it falls outside your realm of control.&lt;/span&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;, we now have the ability to fail any builds that have duplicate dependency versions. When a new duplicate is found, that dependency can either be fixed, or whitelisted if it falls outside your realm of control.&lt;/span&gt;" SourceIndex="281;284;286;286" TextLen="244" order="16"/>
<LayoutNode BgColor="#ffffff" ContainImg="0" ContainP="0" ContainTable="false" Content="Audit your application’s dependencies " DOMCldNum="1" DoC="10" FontSize="24" FontWeight="normal" FrameSourceIndex="0" ID="1-16" IsImg="false" LinkTextLen="0" ObjectRectHeight="38" ObjectRectLeft="0" ObjectRectTop="2089" ObjectRectWidth="1200" SRC="&lt;b&gt;Audit your application’s dependencies&lt;/b&gt;" SourceIndex="290" TextLen="37" order="17"/>
<LayoutNode BgColor="#ffffff" ContainImg="0" ContainP="0" ContainTable="false" Content="From time to time, you should go back and audit your dependencies to make sure they are still providing meaningful value. A useful tool for this is Chris Bateman’s  webpack-visualizer . Give this web webpack --json &gt; stats.json  output, and it will create a graph with all your dependencies: application your  webpack --json &gt; stats.json  output, and it will create a graph with all your dependencies: " DOMCldNum="3" DoC="10" FontSize="16" FontWeight="normal" FrameSourceIndex="0" ID="1-17" IsImg="false" LinkTextLen="0" ObjectRectHeight="54" ObjectRectLeft="0" ObjectRectTop="2145" ObjectRectWidth="1200" SRC="&lt;span style=&quot;font-weight: 400;&quot;&gt;From time to time, you should go back and audit your dependencies to make sure they are still providing meaningful value. A useful tool for this is Chris Bateman’s &lt;/span&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;webpack-visualizer&lt;/span&gt;. Give this web&lt;code&gt;webpack --json &amp;gt; stats.json&lt;/code&gt; output, and it will create a graph with all your dependencies:application your &lt;code&gt;webpack --json &amp;gt; stats.json&lt;/code&gt; output, and it will create a graph with all your dependencies:" SourceIndex="294;297;0;301;0;0;301;0" TextLen="394" order="18"/>
<LayoutNode BgColor="#ffffff" ContainImg="2" ContainP="0" ContainTable="false" Content=" " DOMCldNum="1" DoC="8" FontSize="16" FontWeight="normal" FrameSourceIndex="0" ID="1-18" IsImg="true" LinkTextLen="0" ObjectRectHeight="466" ObjectRectLeft="0" ObjectRectTop="2216" ObjectRectWidth="1200" SRC="&lt;img alt=&quot;Visualization of webpack dependencies&quot; class=&quot;alignnone wp-image-2022&quot; height=&quot;466&quot; src=&quot;https://wp.zillowstatic.com/23/blog-timezone-23e5ee.png&quot; width=&quot;507&quot;/&gt;" SourceIndex="819" TextLen="0" order="19"/>
<LayoutNode BgColor="#ffffff" ContainImg="0" ContainP="0" ContainTable="false" Content="In the above example, I found that moment-timezone was accounting for 10% of the size of one of our applications. That seemed exorbitant. I investigated and found that we were only using the module in one place, and I was able to remove the dependency altogether in favor of a smaller helper function. " DOMCldNum="1" DoC="10" FontSize="16" FontWeight="normal" FrameSourceIndex="0" ID="1-19" IsImg="false" LinkTextLen="0" ObjectRectHeight="52" ObjectRectLeft="0" ObjectRectTop="2699" ObjectRectWidth="1200" SRC="&lt;span style=&quot;font-weight: 400;&quot;&gt;In the above example, I found that moment-timezone was accounting for 10% of the size of one of our applications. That seemed exorbitant. I investigated and found that we were only using the module in one place, and I was able to remove the dependency altogether in favor of a smaller helper function.&lt;/span&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;In the above example, I found that moment-timezone was accounting for 10% of the size of one of our applications. That seemed exorbitant. I investigated and found that we were only using the module in one place, and I was able to remove the dependency altogether in favor of a smaller helper function.&lt;/span&gt;" SourceIndex="309;309" TextLen="300" order="20"/>
<LayoutNode BgColor="#ffffff" ContainImg="0" ContainP="0" ContainTable="false" Content="Be proactive and critical of your dependencies " DOMCldNum="1" DoC="10" FontSize="24" FontWeight="normal" FrameSourceIndex="0" ID="1-20" IsImg="false" LinkTextLen="0" ObjectRectHeight="38" ObjectRectLeft="0" ObjectRectTop="2769" ObjectRectWidth="1200" SRC="&lt;b&gt;Be proactive and critical of your dependencies&lt;/b&gt;" SourceIndex="313" TextLen="46" order="21"/>
<LayoutNode BgColor="#ffffff" ContainImg="0" ContainP="0" ContainTable="false" Content="You can liken bundle size to entropy — without intervention, you can expect it to always increase with time. The tools above can help identify when bloat happens, but they won’t prevent it on their own. You have to be proactive in managing your dependencies; you have to be critical of them, both new and old. " DOMCldNum="1" DoC="10" FontSize="16" FontWeight="normal" FrameSourceIndex="0" ID="1-21" IsImg="false" LinkTextLen="0" ObjectRectHeight="52" ObjectRectLeft="0" ObjectRectTop="2825" ObjectRectWidth="1200" SRC="&lt;span style=&quot;font-weight: 400;&quot;&gt;You can liken bundle size to entropy — without intervention, you can expect it to always increase with time. The tools above can help identify when bloat happens, but they won’t prevent it on their own. You have to be proactive in managing your dependencies; you have to be critical of them, both new and old.&lt;/span&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;You can liken bundle size to entropy — without intervention, you can expect it to always increase with time. The tools above can help identify when bloat happens, but they won’t prevent it on their own. You have to be proactive in managing your dependencies; you have to be critical of them, both new and old.&lt;/span&gt;" SourceIndex="317;317" TextLen="308" order="22"/>
<LayoutNode BgColor="#ffffff" ContainImg="0" ContainP="0" ContainTable="false" Content="On the Mortgages team at Zillow, we have two requirements that every dependency must fulfill: " DOMCldNum="1" DoC="10" FontSize="16" FontWeight="normal" FrameSourceIndex="0" ID="1-22" IsImg="false" LinkTextLen="0" ObjectRectHeight="26" ObjectRectLeft="0" ObjectRectTop="2894" ObjectRectWidth="1200" SRC="&lt;span style=&quot;font-weight: 400;&quot;&gt;On the Mortgages team at Zillow, we have two requirements that every dependency must fulfill:&lt;/span&gt;" SourceIndex="321" TextLen="93" order="23"/>
<LayoutNode BgColor="#ffffff" ContainImg="0" ContainP="0" ContainTable="false" Content="A dependency must give you something good (non-trivial, and not provided by the standard library) A dependency must be responsibly maintained (no backwards-incompatible changes, with an owner that is responsive to requests) " DOMCldNum="1" DoC="10" FontSize="16" FontWeight="normal" FrameSourceIndex="0" ID="1-23" IsImg="false" LinkTextLen="0" ObjectRectHeight="52" ObjectRectLeft="0" ObjectRectTop="2937" ObjectRectWidth="1200" SRC="&lt;span style=&quot;font-weight: 400;&quot;&gt;A dependency must give you something good (non-trivial, and not provided by the standard library)&lt;/span&gt;&lt;li&gt;A dependency must be responsibly maintained (no backwards-incompatible changes, with an owner that is responsive to requests)&lt;/li&gt;" SourceIndex="327;330" TextLen="222" order="24"/>
<LayoutNode BgColor="#ffffff" ContainImg="0" ContainP="0" ContainTable="false" Content="In retrospect, would left-pad have met our requirements for taking a new dependency? It is arguable about whether or not the 17 lines of code are complex enough to warrant a dependency, but we would most likely say no; the code could be added directly to our source and we would have one less dependency to worry about. Was the module well maintained? Considering it was unpublished and broke thousands of dependents, I would definitely say no. Any time you take on a dependency, no matter what the size, you are now at the mercy of the maintainer. " DOMCldNum="1" DoC="10" FontSize="16" FontWeight="normal" FrameSourceIndex="0" ID="1-24" IsImg="false" LinkTextLen="0" ObjectRectHeight="78" ObjectRectLeft="0" ObjectRectTop="3006" ObjectRectWidth="1200" SRC="&lt;span style=&quot;font-weight: 400;&quot;&gt;In retrospect, would left-pad have met our requirements for taking a new dependency? It is arguable about whether or not the 17 lines of code are complex enough to warrant a dependency, but we would most likely say no; the code could be added directly to our source and we would have one less dependency to worry about. Was the module well maintained? Considering it was unpublished and broke thousands of dependents, I would definitely say no. Any time you take on a dependency, no matter what the size, you are now at the mercy of the maintainer.&lt;/span&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;In retrospect, would left-pad have met our requirements for taking a new dependency? It is arguable about whether or not the 17 lines of code are complex enough to warrant a dependency, but we would most likely say no; the code could be added directly to our source and we would have one less dependency to worry about. Was the module well maintained? Considering it was unpublished and broke thousands of dependents, I would definitely say no. Any time you take on a dependency, no matter what the size, you are now at the mercy of the maintainer.&lt;/span&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;In retrospect, would left-pad have met our requirements for taking a new dependency? It is arguable about whether or not the 17 lines of code are complex enough to warrant a dependency, but we would most likely say no; the code could be added directly to our source and we would have one less dependency to worry about. Was the module well maintained? Considering it was unpublished and broke thousands of dependents, I would definitely say no. Any time you take on a dependency, no matter what the size, you are now at the mercy of the maintainer.&lt;/span&gt;" SourceIndex="335;335;335" TextLen="546" order="25"/>
<LayoutNode BgColor="#ffffff" ContainImg="0" ContainP="0" ContainTable="false" Content="Topics JavaScript webpack Share Facebook Twitter LinkedIn " DOMCldNum="1" DoC="10" FontSize="16" FontWeight="normal" FrameSourceIndex="0" ID="1-25" IsImg="false" LinkTextLen="17" ObjectRectHeight="182" ObjectRectLeft="0" ObjectRectTop="3101" ObjectRectWidth="1200" SRC="&lt;strong&gt;Topics&lt;/strong&gt;&lt;a href=&quot;https://www.zillow.com/engineering/tag/javascript/&quot; rel=&quot;tag&quot;&gt;JavaScript&lt;/a&gt;&lt;a href=&quot;https://www.zillow.com/engineering/tag/webpack/&quot; rel=&quot;tag&quot;&gt;webpack&lt;/a&gt;&lt;strong&gt;Share&lt;/strong&gt;&lt;span class=&quot;hidden-xs&quot;&gt;Facebook&lt;/span&gt;&lt;span class=&quot;hidden-xs&quot;&gt;Twitter&lt;/span&gt;&lt;span class=&quot;hidden-xs&quot;&gt;LinkedIn&lt;/span&gt;" SourceIndex="341;344;347;353;363;375;387" TextLen="51" order="26"/>
<LayoutNode BgColor="#ffffff" ContainImg="2" ContainP="0" ContainTable="false" DOMCldNum="3" DoC="8" FontSize="16" FontWeight="normal" FrameSourceIndex="0" ID="1-26" IsImg="false" LinkTextLen="0" ObjectRectHeight="369" ObjectRectLeft="0" ObjectRectTop="3317" ObjectRectWidth="1200" SourceIndex="403" TextLen="36" order="27">
<LayoutNode BgColor="#ffffff" ContainImg="2" ContainP="0" ContainTable="false" Content=" Prev " DOMCldNum="3" DoC="8" FontSize="16" FontWeight="normal" FrameSourceIndex="0" ID="1-26-1" IsImg="false" LinkTextLen="0" ObjectRectHeight="326" ObjectRectLeft="0" ObjectRectTop="3317" ObjectRectWidth="1200" SRC="&lt;img alt=&quot;&quot; class=&quot;media-object wp-post-image&quot; height=&quot;300&quot; src=&quot;https://wp.zillowstatic.com/23/jasmine-7e799e-300x300.png&quot; width=&quot;300&quot;/&gt;&lt;h4 class=&quot;media-heading&quot;&gt;Prev&lt;/h4&gt;" SourceIndex="918;410" TextLen="4" order="28"/>
<LayoutNode BgColor="#ffffff" ContainImg="0" ContainP="0" ContainTable="false" Content="Engineer Highlight: Jasmine Mann " DOMCldNum="3" DoC="10" FontSize="16" FontWeight="normal" FrameSourceIndex="0" ID="1-26-2" IsImg="false" LinkTextLen="0" ObjectRectHeight="26" ObjectRectLeft="0" ObjectRectTop="3660" ObjectRectWidth="1200" SRC="Engineer Highlight: Jasmine Mann" SourceIndex="0" TextLen="32" order="29"/>
</LayoutNode>
<LayoutNode BgColor="#ffffff" ContainImg="2" ContainP="0" ContainTable="false" DOMCldNum="3" DoC="8" FontSize="16" FontWeight="normal" FrameSourceIndex="0" ID="1-27" IsImg="false" LinkTextLen="0" ObjectRectHeight="369" ObjectRectLeft="0" ObjectRectTop="3703" ObjectRectWidth="1200" SourceIndex="423" TextLen="56" order="30">
<LayoutNode BgColor="#ffffff" ContainImg="0" ContainP="0" ContainTable="false" Content="Next " DOMCldNum="3" DoC="10" FontSize="16" FontWeight="normal" FrameSourceIndex="0" ID="1-27-1" IsImg="false" LinkTextLen="0" ObjectRectHeight="26" ObjectRectLeft="0" ObjectRectTop="3703" ObjectRectWidth="1200" SRC="&lt;h4 class=&quot;media-heading&quot;&gt;Next&lt;/h4&gt;" SourceIndex="425" TextLen="4" order="31"/>
<LayoutNode BgColor="#ffffff" ContainImg="2" ContainP="0" ContainTable="false" Content="Zillow Hosting Second #SeaTech4Change Volunteer Fair  " DOMCldNum="3" DoC="8" FontSize="16" FontWeight="normal" FrameSourceIndex="0" ID="1-27-2" IsImg="false" LinkTextLen="0" ObjectRectHeight="326" ObjectRectLeft="0" ObjectRectTop="3746" ObjectRectWidth="1200" SRC="Zillow Hosting Second #SeaTech4Change Volunteer Fair&lt;img alt=&quot;&quot; class=&quot;media-object wp-post-image&quot; height=&quot;300&quot; src=&quot;https://wp.zillowstatic.com/23/SeaTech4ChangeFeaturedImage-7d46cc-300x300.jpg&quot; width=&quot;300&quot;/&gt;" SourceIndex="0;944" TextLen="52" order="32"/>
</LayoutNode>
<LayoutNode BgColor="#ffffff" ContainImg="0" ContainP="1" ContainTable="false" Content="Want to work at Zillow? View Openings Zillow.com Jobs Yahoo - Zillow Real Estate Network © 2006 - 2018 Zillow Follow Us Facebook Twitter LinkedIn " DOMCldNum="5" DoC="10" FontSize="16" FontWeight="normal" FrameSourceIndex="0" ID="1-28" IsImg="false" LinkTextLen="50" ObjectRectHeight="284" ObjectRectLeft="0" ObjectRectTop="4089" ObjectRectWidth="1200" SRC="&lt;p&gt;Want to work at Zillow?&lt;/p&gt;&lt;a class=&quot;btn btn-primary&quot; href=&quot;https://www.zillow.com/careers/jobs/&quot;&gt;View Openings&lt;/a&gt;&lt;a href=&quot;https://www.zillow.com/&quot;&gt;Zillow.com&lt;/a&gt;&lt;a href=&quot;https://www.zillow.com/careers/&quot;&gt;Jobs&lt;/a&gt;&lt;li&gt;Yahoo - Zillow Real Estate Network&lt;/li&gt;&lt;li&gt;© 2006 - 2018 Zillow&lt;/li&gt;&lt;li&gt;Follow Us&lt;/li&gt;&lt;a href=&quot;https://www.facebook.com/Zillow&quot; target=&quot;_blank&quot;&gt;Facebook&lt;/a&gt;&lt;a href=&quot;https://twitter.com/zillow&quot; target=&quot;_blank&quot;&gt;Twitter&lt;/a&gt;&lt;a href=&quot;https://www.linkedin.com/company/zillow&quot; target=&quot;_blank&quot;&gt;LinkedIn&lt;/a&gt;" SourceIndex="450" TextLen="136" order="33"/>
</LayoutNode>
</VIPSPage>
